import "keen-slider/keen-slider.min.css";
import { Button } from "@/components/ui/button";
import { Clock, IdCard, Trophy, Briefcase, ChevronLeft, ChevronRight } from "lucide-react";
import { useEffect, useRef, useState } from "react";
import { useKeenSlider } from "keen-slider/react";
import { courses } from '@/data/courses';
import { Link } from "wouter";
import { useLanguage } from "@/contexts/LanguageContext";

// map icon string to actual component for display
const iconMap: Record<string, JSX.Element> = {
  'id-card': <IdCard className="text-[var(--golden-bronze)] mr-2 h-4 w-4" />,
  'trophy': <Trophy className="text-[var(--golden-bronze)] mr-2 h-4 w-4" />,
  'briefcase': <Briefcase className="text-[var(--golden-bronze)] mr-2 h-4 w-4" />,
};

export default function Courses() {
  const [isVisible, setIsVisible] = useState(false);
  const sectionRef = useRef<HTMLElement>(null);
  const { t } = useLanguage();

  const [sliderRef, slider] = useKeenSlider({
    loop: true,
    slides: { perView: 1.15, spacing: 16 },
    breakpoints: {
      "(min-width: 640px)": { slides: { perView: 1.5, spacing: 24 } },
      "(min-width: 1024px)": { slides: { perView: 2.5, spacing: 32 } },
      "(min-width: 1280px)": { slides: { perView: 3.3, spacing: 40 } },
    },
    renderMode: "performance",
  });

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setIsVisible(true);
        }
      },
      { threshold: 0.1 }
    );

    if (sectionRef.current) {
      observer.observe(sectionRef.current);
    }

    return () => observer.disconnect();
  }, []);

  return (
    <section ref={sectionRef} id="courses" className="py-20 bg-white relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-br from-transparent via-[var(--premium-accent)]/5 to-transparent"></div>
      <div className="max-w-6xl mx-auto px-4 relative z-10">
        <div className="section-divider"></div>
        
        <div className={`text-center mb-16 transform transition-all duration-1000 ${
          isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <h2 className="font-serif text-3xl md:text-5xl font-bold mb-6">
            {t('courses.title')}
          </h2>
          <p className="text-gray-600 text-lg max-w-3xl mx-auto leading-relaxed">
            {t('courses.subtitle')}
          </p>
        </div>
        
        <div className="relative">
          {/* Slider container */}
          <div ref={sliderRef} className="keen-slider pb-8">
            {courses.map((course, index) => (
              <div key={course.id} className="keen-slider__slide">
                <div className={`bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden group hover:shadow-2xl transition-all duration-700 flex flex-col h-full ${
                  isVisible ? 'translate-y-0 opacity-100' : 'translate-y-12 opacity-0'
                }`} style={{ transitionDelay: `${index * 150}ms` }}>
                  <img 
                    src={course.image}
                    alt={course.title}
                    className="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-300 hover:brightness-110"
                  />
                  
                  <div className="p-6 flex flex-col flex-grow">
                    <div className="flex items-center justify-between mb-4">
                      <span className={`px-3 py-1 rounded-full text-sm font-medium ${course.badgeColor}`}>
                        {course.badge}
                      </span>
                      <span className="text-2xl font-bold text-deep-black">{course.price}</span>
                    </div>
                    
                    <h3 className="font-serif text-xl font-bold mb-3 min-h-[3.5rem] flex items-start">{course.title}</h3>
                    <p className="text-gray-600 mb-4 text-sm leading-relaxed flex-grow min-h-[4.5rem]">
                      {course.description}
                    </p>
                    
                    <div className="space-y-2 mb-6">
                      <div className="flex items-center text-sm text-gray-600">
                        <Clock className="text-[var(--golden-bronze)] mr-2 h-4 w-4" />
                        <span>{course.duration}</span>
                      </div>
                      <div className="flex items-center text-sm text-gray-600">
                        {course.icon ? iconMap[course.icon] : null}
                        <span>{course.certification}</span>
                      </div>
                    </div>
                    
                    <Button asChild className={`btn-shimmer w-full py-3 rounded-full font-medium transition-all hover:scale-105 hover:shadow-lg mt-auto ${course.buttonStyle}`}>
                      <a href={`/courses/${course.id}`}>Enroll Now</a>
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Arrows */}
          <button
            className="absolute -left-6 top-1/2 -translate-y-1/2 md:-left-10 w-9 h-9 md:w-11 md:h-11 rounded-full bg-white/10 backdrop-blur-md border border-white/30 flex items-center justify-center group hover:bg-[var(--premium-accent)]/15 hover:border-[var(--premium-accent)]/50 transition-all shadow-lg hover:shadow-[0_0_12px_var(--premium-accent)]"
            onClick={() => slider.current?.prev()}
          >
            <ChevronLeft className="h-5 w-5 text-[var(--premium-accent)] transition-colors" />
          </button>
          <button
            className="absolute -right-6 top-1/2 -translate-y-1/2 md:-right-10 w-9 h-9 md:w-11 md:h-11 rounded-full bg-white/10 backdrop-blur-md border border-white/30 flex items-center justify-center group hover:bg-[var(--premium-accent)]/15 hover:border-[var(--premium-accent)]/50 transition-all shadow-lg hover:shadow-[0_0_12px_var(--premium-accent)]"
            onClick={() => slider.current?.next()}
          >
            <ChevronRight className="h-5 w-5 text-[var(--premium-accent)] transition-colors" />
          </button>
        </div>
        
        {/* Call to Action */}
        <div className={`text-center mt-16 transform transition-all duration-1000 delay-800 ${
          isVisible ? 'translate-y-0 opacity-100' : 'translate-y-8 opacity-0'
        }`}>
          <div className="bg-deep-black rounded-2xl p-8 md:p-12 text-white relative overflow-hidden">
            <div className="absolute inset-0 bg-gradient-to-br from-[var(--premium-accent)]/10 to-transparent"></div>
            <div className="relative z-10">
              <h3 className="font-serif text-2xl md:text-3xl font-bold mb-4">
                Ready to Start Your <span className="premium-accent">Barber Journey?</span>
              </h3>
              <p className="text-gray-300 mb-8 max-w-2xl mx-auto text-base md:text-lg">
                Join hundreds of successful graduates who've transformed their lives through our comprehensive training programs.
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <Button asChild className="btn-shimmer bg-[var(--premium-accent)] text-black px-8 py-4 text-base md:text-lg rounded-full font-medium hover:bg-[var(--premium-accent)]/90 hover:scale-105 transition-all duration-300 shadow-lg">
                  <Link href="/contacts">Schedule a Tour</Link>
                </Button>
                <Button variant="outline" className="btn-shimmer border-2 border-[var(--premium-accent)] text-[var(--premium-accent)] px-8 py-4 text-base md:text-lg rounded-full font-medium hover:bg-[var(--premium-accent)] hover:text-black transition-all duration-300">
                  Download Brochure
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
